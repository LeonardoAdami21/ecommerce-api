// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  name      String
  password  String
  userRole     String[]  @default(["user"])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("users")
}

model Product {
  id             Int            @id @default(autoincrement())
  name           String
  category       String
  description    String         @db.Text
  price          Decimal        @db.Decimal(10, 2)
  quantity_stock Int
  createdAt      DateTime       @default(now())
  updatedAt      DateTime       @updatedAt
  OrderProduct   OrderProduct[]

  @@map("products")
}

model Order {
  id           Int            @id @default(autoincrement())
  total_amount Decimal        @db.Decimal(10, 2)
  status       String         @default("Pendente") // "Pendente", "Conclu√≠do" ou "Cancelado"
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
  products     OrderProduct[]

  @@map("orders")
}

model OrderProduct {
  id        Int     @id @default(autoincrement())
  orderId   Int
  productId Int
  quantity  Int
  price     Decimal @db.Decimal(10, 2)

  order   Order   @relation(fields: [orderId], references: [id], onDelete: Cascade)
  product Product @relation(fields: [productId], references: [id])

  @@map("order_products")
}
